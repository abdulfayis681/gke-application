name: CI/CD with Env-based ECR and Helm

on:
  push:
    branches:
      - staging
      - main

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: DevOps
  RELEASE_NAME: swiggy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.1'

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.3

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Set environment-specific values
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "namespace=production" >> $GITHUB_OUTPUT
            echo "values_file=values.production.yaml" >> $GITHUB_OUTPUT
            echo "ecr_repo=swiggy-prod" >> $GITHUB_OUTPUT
            echo "tag=prod-${{ github.sha }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "namespace=staging" >> $GITHUB_OUTPUT
            echo "values_file=values.staging.yaml" >> $GITHUB_OUTPUT
            echo "ecr_repo=swiggy-staging" >> $GITHUB_OUTPUT
            echo "tag=staging-${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build and Push Docker Image to ECR
        run: |
          IMAGE="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/${{ steps.env.outputs.ecr_repo }}:${{ steps.env.outputs.tag }}"
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Create namespace if not exists
        run: |
          kubectl get namespace ${{ steps.env.outputs.namespace }} || \
          kubectl create namespace ${{ steps.env.outputs.namespace }}

      - name: Deploy with Helm
        run: |
          helm upgrade --install $RELEASE_NAME ./swiggy-app \
            -f ./swiggy-app/${{ steps.env.outputs.values_file }} \
            --set image.repository="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/${{ steps.env.outputs.ecr_repo }}" \
            --set image.tag=${{ steps.env.outputs.tag }} \
            --namespace ${{ steps.env.outputs.namespace }} \
            --create-namespace
